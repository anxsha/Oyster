@page "/Groups/{id:int}/Members"
@using Oyster.HelperClasses
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Oyster.Pages.Groups.MembersModel

@{
    ViewData["Title"] = $"Members - {Model.Group.Name}";

}
@* Container for alerts after removing a member *@
<div id="alerts-container" class="fixed top-0 z-50 flex w-full justify-center">

</div>

@* Render the group header *@
<partial name="Shared/_GroupHeader"/>

<div class="mt-8 mb-6 flex w-full flex-col items-center self-center md:w-3/4">
    @* User search input *@
    <div class="flex w-full">
        <span class="inline-flex items-center rounded-l-md border border-r-0 border-gray-300 bg-gray-200 px-3 text-sm text-gray-900">
            @@
        </span>
        <input id="search-table-input" name="SearchInput" value=""
               placeholder="Type user's display name or username" type="text" class="rounded-none rounded-r-lg bg-gray-50 border border-gray-300 text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5">
    </div>
    @* Dynamic table with members *@
    <div class="mt-2 w-full overflow-x-auto shadow-md sm:rounded-lg">
        <table id="members-table" class="w-full text-left text-sm text-gray-500">
            <thead class="bg-gray-50 text-xs uppercase text-gray-700">
            <tr>
                <th scope="col" class="cursor-pointer px-6 py-3">
                    Display name
                </th>
                <th scope="col" class="cursor-pointer px-6 py-3">
                    Username
                </th>
                <th scope="col" class="px-6 py-3">

                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var user in Model.Group.Members) {
                if (user.Id != Model.Group.Founder.Id) {
                    <tr class="border-b bg-white">
                        <th scope="row" class="">
                            <a asp-page="../UserPage" asp-route-username="@user.PublicUsername" class="flex items-center px-6 py-4 font-medium text-gray-900">
                                <img src="@(user.Avatar != null ? user.Avatar.Url : DefaultDataProvider.GetDefaultUserAvatar())" class="mr-2 h-8 w-8 rounded-full bg-gray-100 object-cover" alt="">
                                @user.DisplayName
                            </a>
                        </th>
                        <td class="px-6 py-4">
                            @user.PublicUsername
                        </td>
                        @if (Model.IsUserGroupFounder) {
                            <td class="px-6 py-4 text-right">
                                <form method="POST" onsubmit="return removeMember(event)">
                                    <input type="hidden" name="userId" value="@user.Id"/>
                                    <button class="bg-white hover:bg-gray-100 border border-gray-200 focus:ring-4 focus:outline-none focus:ring-gray-100 font-medium rounded-lg text-sm px-3 py-2 text-center" type="submit">Remove</button>
                                </form>
                            </td>
                        } else {
                            <td>

                            </td>
                        }
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
    <script>
    const alertsContainer = document.querySelector("#alerts-container");
    let table;
    //Setup the dynamic data table
    window.addEventListener('DOMContentLoaded', () => {
        table = new DataTable('#members-table', {
            "pageLength": 15,
            "dom": 'tip',
            "language": {
                "info": "Showing page _PAGE_ of _PAGES_",
                "emptyTable": "",
                "zeroRecords": "",
                "infoEmpty": "",
                "infoFiltered": "",
                "paginate": {
                    "previous": "Prev"
                }
            },
            "pagingType": "simple"
        });
        // Automatically filter members on input change
        const searchTableInput = document.getElementById('search-table-input');
        searchTableInput.addEventListener('keyup',  () => {
            table.search(searchTableInput.value);
            table.draw();
        });
        // Styles on JS-generated elements
        const membersTableInfo = document.getElementById('members-table_info');
        membersTableInfo.classList.add("bg-white", "border-b", "text-gray-500", "px-6", "py-4", "text-sm");
        
        const membersTablePaginate = document.getElementById('members-table_paginate');
        membersTablePaginate.classList.add("bg-white", "border-b", "text-gray-500", "px-6", "py-4", "text-sm", "text-right");
        
        const membersTableWrapper = document.getElementById('members-table_wrapper');
        membersTableWrapper.classList.add("grid", "grid-cols-2");
        
        const membersTable = document.getElementById('members-table');
        membersTable.classList.add("row-start-1", "row-end-2", "col-start-1", "col-end-3");
    });
    // Post request to remove a member
    const removeMember = async event => {
        event.preventDefault();
        // Get user id from hidden input in the clicked form button
        const data = new FormData(event.target);
        const formEntries = [...data.entries()];
        const userId = formEntries[0][1];
        // Get the razor pages auto-generated anti forgery token
        const requestVerificationToken = formEntries[1][1].toString();
        const response = await fetch(
            `${location.toString()}`,
            {
                method: 'POST',
                headers: {
                    RequestVerificationToken:
                        requestVerificationToken,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    userId
                }),
            }
        );
        if (!response.ok) {
            showRemovingMemberErrorAlert();
        } else { // Member successfully removed
            const data = await response.json();
            if (data["userWasRemoved"]) {
                table.rows((idx, curRow, node) => {
                    if(curRow[1] === data["username"]) {
                        table.row(idx).remove();
                        table.draw();
                    }
                });
                showRemovingMemberSucceededAlert();
            } else {
                showRemovingMemberErrorAlert();
            }
        }
        return false;
    }
    
    const showRemovingMemberErrorAlert = () => {
        alertsContainer.innerHTML = `
            <div class="mb-4 flex rounded-lg p-4 text-sm text-white animate-hide animation-delay-5s animation-fill-forwards bg-danger" role="alert" xmlns="http://www.w3.org/1999/html">
                <svg class="mr-3 inline h-5 w-5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                </svg>
                <div>
                    <span class="font-medium">Error!</span> There was an error processing your request.
                </div>
            </div>
        `;
    }
    
    const showRemovingMemberSucceededAlert = () => {
        alertsContainer.innerHTML = `
            <div class="mb-4 flex rounded-lg p-4 text-sm text-white animate-hide animation-delay-5s animation-fill-forwards bg-success" role="alert" xmlns="http://www.w3.org/1999/html">
                <svg class="mr-3 inline h-5 w-5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                </svg>
                <div>
                    <span class="font-medium">Removed!</span> You have removed a group member.
                </div>
            </div>
        `;
    }
    
    </script>
}